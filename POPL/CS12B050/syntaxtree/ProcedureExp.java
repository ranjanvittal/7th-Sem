//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> "("
 * f1 -> "lambda"
 * f2 -> "("
 * f3 -> ( Identifier() )*
 * f4 -> ")"
 * f5 -> Expression()
 * f6 -> ")"
 */
public class ProcedureExp implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeListOptional f3;
   public NodeToken f4;
   public Expression f5;
   public NodeToken f6;

   public ProcedureExp(NodeToken n0, NodeToken n1, NodeToken n2, NodeListOptional n3, NodeToken n4, Expression n5, NodeToken n6) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
   }

   public ProcedureExp(NodeListOptional n0, Expression n1) {
      f0 = new NodeToken("(");
      f1 = new NodeToken("lambda");
      f2 = new NodeToken("(");
      f3 = n0;
      f4 = new NodeToken(")");
      f5 = n1;
      f6 = new NodeToken(")");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

